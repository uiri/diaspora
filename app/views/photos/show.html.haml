-#   Copyright (c) 2010, Diaspora Inc.  This file is
-#   licensed under the Affero General Public License version 3 or later.  See
-#   the COPYRIGHT file.

- content_for :head do
  = include_javascripts :photos

.span-16.append-4.prepend-4.last
  #photo_controls
    -if @additional_photos && @additional_photos.length > 1
      .right
        =link_to "← #{t('previous')}", @prev_photo, :rel => 'prefetch', :id => 'photo_show_left'
        \/
        =link_to "#{t('next')} →", @next_photo, :rel => 'prefetch',  :id => 'photo_show_right'

  #original_post_info
    = render 'shared/author_info', :person => @photo.person, :post => @photo

  #photo_container
    #show_photo{:data=>{:guid=>@photo.id}}
      -if @ownership
        = image_tag 'ajax-loader.gif', :id => "photo_spinner", :class => "hidden"
        = image_tag @photo.url(:scaled_full)
      -else
        = image_tag @photo.url(:scaled_full)

      #caption
        = @photo.caption

    - if @ownership
      .photo_options{:data=>{:actor=>"#{@photo.person.owner.id}",:actor_person=>"#{@photo.person.id}",:image_url=>"#{@photo.url(:thumb_large)}"}}
        = link_to t('.make_profile_photo'), {:controller => "photos", :action => "make_profile_photo", :photo_id => @photo.id}, :remote => true, :class => 'make_profile_photo'
        |
        = link_to t('.edit'), '#', :id => "edit_photo_toggle"
      %br

  %hr

  - if @photo.status_message

    .span-8.last
      %p
        = markdownify(@photo.status_message.message)
      %span{:style=>'font-size:smaller'}
        =link_to t('.collection_permalink'), @photo.status_message
      %br
      %br

    .span-7.prepend-1
      .show_photo_attachments
        - for photo in @additional_photos
          = link_to (image_tag photo.url(:thumb_small)), object_path(photo)


    #photo_edit_options
      %h4= t('.edit_delete_photo')
      %p
        = form_for @photo, :remote => true do |p|
          = p.text_field :caption, :value => @photo.caption
          = p.submit t('.update_photo')
      %p
        = button_to t('.delete_photo'), @photo, :confirm => t('are_you_sure'), :method => :delete

.span-16.prepend-4.append-4.last
  %h5
    = t('_comments')

  #photo_stream.stream.show
    %div{:data=>{:guid=>@parent.id}}
      = render "comments/comments", :post_id => @parent.id, :comments => @parent.comments, :always_expanded => true, :likes => @parent.likes
